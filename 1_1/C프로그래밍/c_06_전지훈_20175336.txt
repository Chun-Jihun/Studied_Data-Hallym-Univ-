□ 적용 확인 학습
2. 다음에 서술된 문장에 어울리는 프로그램 코드를 완성해 보세요.
    
A. size에는 배열의 원소 수를 저장한다.
int num[5];
int size = (sizeof(num)/sizeof(int));

C. double형 배열 dou를 선언하면서 값 2.1, 3.7, 4.87, 5.89로 초기화한다.
double dou = {2.1, 3.7, 4.87, 5.89};

D. 문자열 배열 str을 선언하면서 “coffee”로 초기화 한다. 
char str = “coffee”;
 
□ 응용 프로그래밍
 
>> 응용 프로그래밍은 다음과 같은 구조로 작성합니다. 번호가 늘어 갈 경우 번호에 해당하는 함수를 만들어 사용합니다.
#include <stdio.h>
void ex_02(void) {
//응용 프로그래밍 2번은 ex_02() 내부에 작성합니다
}
void ex_03(void) {
//printf("응용 프로그래밍 3번은 ex_03() 내부에 작성합니다.
}
int main() { ex_02(); ex_03();
return 0;
}
1. 실행화면을 참고하여, 문자 4개를 저장하는 배열을 선언하고 사용자로부 터 문자를 입력 받아 저장하고 출력하세요.
문자입력 : m 문자입력 : o 문자입력 : o 문자입력 : n   입력된 문자 = moon

2. 실행화면을 참고하여, 문자열 1개를 저장하는 배열을 선언하고 사용자로 부터 문자열을 입력 받아 저장하고 출력하세요.
문자열입력 : rainy
입력된 문자열 = rainy
  
3. 실행화면을 참고하여 사용자로부터 문자열을 1개를 입력 받아 그 문자열 의 길이를 출력하세요.
문자열입력 : apple
입력된 문자열 길이=5

 #include <stdio.h>
#include <conio.h>

void ex_01(void){
    char ch[4];

    for(int i = 0; i < sizeof(ch)/sizeof(char); i++){
        printf("문자입력 : ");
        ch[i] = getche();
        printf("\n");
    }
    printf("입력된 문자 = ");
    for(int i = 0; i < sizeof(ch)/sizeof(char); i++){
        printf("%c", ch[i]);
    }
}
void ex_02(void){
    char str[50];

    printf("문자열 입력 : ");
    gets(str);
    printf("입력된 문자열 = %s", str);
}
void ex_03(void){
    char str[50];
    int count = 0, i = 0;

    printf("문자열 입력 : ");
    gets(str);
    while(str[i]){
        if(str[i] != '\0'){
            count++;
        }
        i++;
    }
    printf("입력된 문자열 길이 = %d", count);
}
int main(){
    ex_01();
    ex_02();
    ex_03();
    return 0;
}
